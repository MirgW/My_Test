import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'

def static buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmm") // you can change it
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

android {
    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword '12581258'
            storeFile file('C:/W/_Android_/KEY/sign.jks')
            storePassword '12581258'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId 'com.moris.tavda'
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
//        versionName "2.0"


        vectorDrawables.useSupportLibrary =
                true
    }
    buildTypes {
        release {
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
            zipAlignEnabled true
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
        }
    }
    flavorDimensions "tier"
    productFlavors {
        free {
            applicationIdSuffix ".free"
            versionName "1.0-free-build-${buildTime()}"
            dimension "tier"
            signingConfig signingConfigs.config
        }
        pro {
            applicationIdSuffix ".pro"
            versionName "1.0-pro-build-${buildTime()}"
            dimension "tier"
            signingConfig signingConfigs.config
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "Tavda"
            def SEP = "_"
            def flavor = variant.variantData.variantConfiguration.flavorName
            def buildType = variant.variantData.variantConfiguration.buildType.name
//            def version = variant.versionName
            def date = new Date()
            def formattedDate = date.format('ddMMyyyyHHmm')

            def newApkName = project + SEP + flavor + SEP + buildType + SEP + "1.0" + SEP + formattedDate + ".apk"

            outputFileName = new File(newApkName)
        }
    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildToolsVersion = '28.0.3'
}

dependencies {
    def work_version = "2.1.0-rc01"
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-beta01'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    //    implementation 'org.springframework.android:spring-android-rest-template:2.0.0.M3'
    //    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.6'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.google.firebase:firebase-core:17.0.0'
    implementation 'com.google.firebase:firebase-auth:18.0.0'
    //    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.3'
}

repositories {
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    }
}
apply plugin: 'com.google.gms.google-services'
